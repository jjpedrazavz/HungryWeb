@model HungryWeb.ViewModels.FoodViewModel

<div class="form-group">
    @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.CategoriaID, "Categoria", htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.DropDownListFor(mv => mv.CategoriaID, Model.Categories, htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.CategoriaID, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Precio, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Precio, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Precio, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.tipoID, "Tipo", htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @*El primer parametro asiga el valor seleccionado del drop a la propiedad tipoID del ViewModel
          El segundo pasa la coleccion de Tipos*@
        @Html.DropDownListFor(md => md.tipoID , Model.Tipos , htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.tipoID, "", new { @class = "text-danger" })
    </div>
</div>


@*Colocamos un drop con las imagenes disponibles para que seleccione una.*@
@for (int i = 0; i < Model.ImagenesSeleccionadas.Count; i++)
{

    <div class="form-group">
        <label class="control-label col-md-2">Alimento Imagen @(i + 1):</label>
        <div class="col-md-10">
            @*El Primer paramentro del DropDownListFor es una funcion encargada de agregar cada nombre de imagen al arreglo de cadenas ImagenesProducto tomando cada elemento SELECCIONADO desde el SelectList con todas las imagenes
              El segundo paramentro es el SelectList en el indice indicado 
              El tercer paramentro es la leyenda que aparece en el view
              El cuarto los estilos css a aplicar.*@
            @Html.DropDownListFor(vm => vm.SelectedImage, Model.ImagenesSeleccionadas[i], "Seleccionar Imagen", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.SelectedImage, "", new { @class = "textdanger" })
        </div>
    </div>

}
